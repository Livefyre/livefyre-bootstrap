@import (reference) "./variables";

/* Toggle styles
-------------------------------------------------- */
/* 6/1/16 Phil:
  - Pretty much the same CSS as Coral.Switch.
  - Removed the .toggle-sm option. In Studio, we ended up only using the small size so we can just made the small size the default.
  - Coral UI doesn't have an option to display ON/OFF text alongside the switch so we'll leave it out here, too.
*/


// From coralui-theme-spectrum/styles/coralui-component-switch/index.styl
@switch-width: 24px;
@switch-height: 12px;
@switch-handle-width: 10px;

// From coralui-theme-spectrum/styles/coralui-component-switch/light.styl
@switch-track-background-color: @spectrum-color-light-grey5;
@switch-track-disabled-background-color: @spectrum-color-light-disabled;
@switch-handle-border-color: @spectrum-color-light-checkmark;
@switch-handle-border-color-hover: @spectrum-color-light-checkmark-hover;
@switch-handle-border-color-active: @spectrum-color-light-checkmark-active;
@switch-handle-border-color-focus: @spectrum-color-light-focus;
@switch-handle-border-color-checked: @spectrum-color-light-checkmark-checked;
@switch-handle-background-color: @spectrum-color-light-background;
@switch-handle-disabled-border-color: @spectrum-color-light-checkmark-disabled;

// From coralui-theme-spectrum/styles/commons/layout.styl
@spectrum-transition-time: 150ms;



// From coralui-theme-spectrum/styles/coralui-component-switch/index.styl and skin.styl
.toggle {
  // required to comply with single line components
  display: inline-block;
  vertical-align: top;
  margin: 0;

  // required for the input to take the whole size
  position: relative;

  height: @switch-height;

  &:hover input:not(:disabled) {
    + span:after {
      border-color: @switch-handle-border-color-hover;
      box-shadow: none;
    }
  }

  &:active input:not(:disabled) {
    + span:after {
      border-color: @switch-handle-border-color-active;
    }
  }  
}

.toggle span {
  display: inline-block;
  // positions the pseudo elements relative to this one
  position: relative;

  height: @switch-height;
  width: @switch-width;

  &:before,
  &:after {
    display: block;
    position: absolute;
    content: "";

    box-sizing: border-box;
  }

  // :before is used for the track of the switch
  &:before {
    transition: background @spectrum-transition-time ease-in-out, border @spectrum-transition-time ease-in-out;

    height: 4px;

    top: 3px;
    left: 0;
    right: 0;

    border-radius: 2px;background: @switch-track-background-color;
  }

  // :after is used for the handle of the switch
  &:after {
    transition: background @spectrum-transition-time ease-in-out, border @spectrum-transition-time ease-in-out, transform @spectrum-transition-time ease-in-out, box-shadow @spectrum-transition-time ease-in-out;

    width: @switch-handle-width;
    height: @switch-handle-width;

    top: 0;
    left: 0;

    background: @switch-handle-background-color;
    border: 2px solid @switch-handle-border-color;
    border-radius: 50%;
  }
}

.toggle input {
  position: absolute;
  top: 0;

  width: 100%;
  height: 100%;

  opacity: 0.0001;

  cursor: pointer;
  z-index: 1;

  &:checked {
    + span:after {
      transform: translateX(@switch-width - @switch-handle-width);
      border-width: (@switch-handle-width / 2);
      border-color: @switch-handle-border-color-checked;
    }
  }

  &:focus {
    + span:after {
      border-color: @switch-handle-border-color-focus;
      box-shadow: 0 0 0 1px @switch-handle-border-color-focus;
    }
  }

  &:disabled {
    + span:before {
      background: @switch-track-disabled-background-color;
      // otherwise it will transition to disabled
      transition: none;
    }

    + span:after {
      border-color: @switch-handle-disabled-border-color;
      // otherwise it will transition to disabled
      transition: none;
    }
  }
}
