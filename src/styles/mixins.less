@import (reference) "@{bootstrap-less}/mixins.less";

// Button shadows
// -------------------------
//
// Add inset shadow on click

.button-shadow(@background; @border) {
  &:active,
  &.active,
  .open .dropdown-toggle& {
    background-image: none;
    background-color: darken(@background, 5%);
        border-color: darken(@border, 5%);
    .box-shadow(inset 0 1px 2px fade(@gray-darker, 30%));
  }  
}


// Commonly used font-families
// -------------------------
//

@georgia: Georgia, "Times New Roman", serif;
@helvetica: "Helvetica Neue", Arial, Helvetica, Geneva, sans-serif;


// CSS3 properties
// -------------------------
//

.animation(@animation) {
-webkit-animation: @animation;
   -moz-animation: @animation;
     -o-animation: @animation;
        animation: @animation;
}

.animation-delay(@delay) {
 -webkit-animation-delay: @delay;
    -moz-animation-delay: @delay;
         animation-delay: @delay;
}

// Border Radius
.border-radius(@radius) {
  -webkit-border-radius: @radius;
     -moz-border-radius: @radius;
      -ms-border-radius: @radius;
       -o-border-radius: @radius;
          border-radius: @radius;
}

// Drop shadows
.box-shadow(@shadow) {
  -webkit-box-shadow: @shadow;
     -moz-box-shadow: @shadow;
      -ms-box-shadow: @shadow;
       -o-box-shadow: @shadow;
          box-shadow: @shadow;
}

// Transitions
.transition(@transition) {
  -webkit-transition: @transition;
     -moz-transition: @transition;
      -ms-transition: @transition;
       -o-transition: @transition;
          transition: @transition;
}


.backface-visibility(@value) {
  -webkit-backface-visibility: @value;
     -moz-backface-visibility: @value;
       -o-backface-visibility: @value;
          backface-visibility: @value;
}
.perspective(@perspective) {
  -webkit-perspective: @perspective;
     -moz-perspective: @perspective;
       -o-perspective: @perspective;
          perspective: @perspective;
}

// Transformations
.rotate(@degrees) {
  -webkit-transform: rotate(@degrees);
     -moz-transform: rotate(@degrees);
      -ms-transform: rotate(@degrees);
       -o-transform: rotate(@degrees);
          transform: rotate(@degrees);
}
.rotateY(@degrees) {
  -webkit-transform: rotateY(@degrees);
     -moz-transform: rotateY(@degrees);
      -ms-transform: rotateY(@degrees);
       -o-transform: rotateY(@degrees);
          transform: rotateY(@degrees);
}
.scale(@ratio) {
  -webkit-transform: scale(@ratio);
     -moz-transform: scale(@ratio);
      -ms-transform: scale(@ratio);
       -o-transform: scale(@ratio);
          transform: scale(@ratio);
}
.translate(@x, @y) {
  -webkit-transform: translate(@x, @y);
     -moz-transform: translate(@x, @y);
      -ms-transform: translate(@x, @y);
       -o-transform: translate(@x, @y);
          transform: translate(@x, @y);
}
.translateY(@y) {
  -webkit-transform: translateY(@y);
     -moz-transform: translateY(@y);
      -ms-transform: translateY(@y);
       -o-transform: translateY(@y);
          transform: translateY(@y);
}
.translateZ(@z) {
  -webkit-transform: translateZ(@z);
     -moz-transform: translateZ(@z);
      -ms-transform: translateZ(@z);
       -o-transform: translateZ(@z);
          transform: translateZ(@z);
}
.skew(@x, @y) {
  -webkit-transform: skew(@x, @y);
     -moz-transform: skew(@x, @y);
      -ms-transform: skew(@x, @y);
       -o-transform: skew(@x, @y);
          transform: skew(@x, @y);
}
.translate3d(@x, @y, @z) {
  -webkit-transform: translate(@x, @y, @z);
     -moz-transform: translate(@x, @y, @z);
      -ms-transform: translate(@x, @y, @z);
       -o-transform: translate(@x, @y, @z);
          transform: translate(@x, @y, @z);
}
.preserve3d() {
  -webkit-transform-style: preserve-3d;
     -moz-transform-style: preserve-3d;
      -ms-transform-style: preserve-3d;
          transform-style: preserve-3d;
}

// Background sizing
.background-size(@size){
  -webkit-background-size: @size;
     -moz-background-size: @size;
      -ms-background-size: @size;
       -o-background-size: @size;
          background-size: @size;
}


// Box sizing
.box-sizing(@boxmodel) {
  -webkit-box-sizing: @boxmodel;
     -moz-box-sizing: @boxmodel;
      -ms-box-sizing: @boxmodel;
       -o-box-sizing: @boxmodel;
          box-sizing: @boxmodel;
}

// User Select, for selecting text on the page
.user-select(@select) {
  -webkit-user-select: @select;
     -moz-user-select: @select;
      -ms-user-select: @select;
       -o-user-select: @select;
          user-select: @select;
}

// Opacity
.opacity(@opacity) {
    @ieOpacity: @opacity * 100;
    opacity: @opacity;
    filter: ~"alpha(opacity=@{ieOpacity})";
    -ms-filter: %("progid:DXImageTransform.Microsoft.Alpha(Opacity=%d)", @ieOpacity);
    -moz-opacity: @opacity;
    -khtml-opacity: @opacity;
    -webkit-opacity: @opacity;
}

.transform-origin(@origin) {
  -webkit-transform-origin: @origin;
     -moz-transform-origin: @origin;
      -ms-transform-origin: @origin;
       -o-transform-origin: @origin;
          transform-origin: @origin;
}
.transform-style(@style) {
  -webkit-transform-style: @style;
     -moz-transform-style: @style;
       -o-transform-style: @style;
          transform-style: @style;
}

/* GRADIENTS */
.linear-gradient(@direction, @start, @end) {
    background-image: -moz-linear-gradient(@direction, @start, @end);
    background-image: -ms-linear-gradient(@direction, @start, @end);
    background-image: -o-linear-gradient(@direction, @start, @end);
    background-image: -webkit-linear-gradient(@direction, @start, @end);
    background-image: linear-gradient(@direction, @start, @end);
}

/**
 * A direction value of 1 specifies a horizontal gradient, 0 specifies vertical.
 * http://msdn.microsoft.com/en-us/library/ms532887(v=vs.85).aspx
 * start and end values should be hexes
 */
.ie-backcompat-linear-gradient(@direction, @start, @end) {
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType='%d')",@start,@end,@direction));
    -ms-filter: %("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType='%d')",@start,@end,@direction);
}

/* RETINA MIXIN */
.image-2x(@image, @width, @height, @repeat: no-repeat) {
  @filename  : ~`/(.*)\.(jpg|jpeg|png|gif)/.exec(@{image})[1]`;
  @extension : ~`/(.*)\.(jpg|jpeg|png|gif)/.exec(@{image})[2]`;
  background-image: ~`"url(@{filename}@2x.@{extension})"`;
  background-repeat: @repeat;
  
  @media print, screen,
    (-webkit-min-device-pixel-ratio: 1.25),
    (min-device-pixel-ratio: 1.25),
    (min-resolution: 120dpi) {
      background-image: ~`"url(@{filename}@2x.@{extension})"`;
      background-size: @width @height;
  }
}

/* VERTICAL CENTERING */
// To avoid half-pixel blurriness, the
// parent element should have preserve-3d.
// Use .preserve3d mixin defined above.
.vertical-center() {
    position: relative;
    top: 50%;
    .translateY(-50%);
}

/* Truncate text with ellipsis */
.truncate() {
  position: relative;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  max-width: 100%;
}

// Force long words to break (ex: URLs).
// Ref: https://css-tricks.com/almanac/properties/w/word-break/
.word-break() {
  -ms-word-break: break-all;
  word-break: break-all;
  word-break: break-word; // Non standard for webkit
}


// Vertically center using a top margin.
// -------------------------
// Used by form-sidebar.less
// .vertical-center mixin can cause issues with dropdown menus appearing behind other elements
// Also allows us to move later to a 6px vertical baseline grid.

.vertical-center-margin (@container-height; @element-height; @container-border-width: 1px) {
    margin-top: floor((@container-height - @element-height) / 2) - @container-border-width;  
}


// Popovers
// -------------------------
// Themes a .popover

.make-popover-theme(
  @bg;
  @color;
  @border;
  @arrow-color;
  @arrow-outer-fallback-color;
  @arrow-outer-color;) {
  background-color: @bg;
  border: @border;

  .popover-title {
    background-color: @bg;
    color: @color;
  }

  .popover-content {
    color: @color;
  }

  .arrow {
    border-width: 11px;
    width: 0;
    height: 0;
    border-color: transparent;
    border-style: solid;
  }

  // :after styles weren't compiling for dark them when nested. Don't know why.
  &.top .arrow {
    border-top-color: @arrow-outer-fallback-color; // IE8 fallback
    border-top-color: @arrow-outer-color;
    border-bottom-width: 0;
  }
  &.top .arrow:after {
    border-top-color: @arrow-color;
  }
  &.right .arrow {
    border-right-color: @arrow-outer-fallback-color; // IE8 fallback
    border-right-color: @arrow-outer-color;
    border-left-width: 0;
  }
  &.right .arrow:after {
    border-right-color: @arrow-color;
  }
  &.bottom .arrow {
    border-bottom-color: @arrow-outer-fallback-color; // IE8 fallback
    border-bottom-color: @arrow-outer-color;
    border-top-width: 0;
  }
  &.bottom .arrow:after {
    border-bottom-color: @arrow-color;
  }
  &.left .arrow {
    border-left-color: @arrow-outer-fallback-color; // IE8 fallback
    border-left-color: @arrow-outer-color;
    border-right-width: 0;
  }
  &.left .arrow:after {
    border-left-color: @arrow-color;
  }
}


/**
* Themes an .tooltip
* @mixin
*/
.make-tooltip-theme(
  @color;
  @bg;
  @arrow-color;) {
  
  .tooltip-inner {
    color: @color;
    background-color: @bg;
  }

  &.top .tooltip-arrow, &.top-left .tooltip-arrow, &.top-right .tooltip-arrow {
    border-top-color: @arrow-color;
  }
  &.right .tooltip-arrow {
    border-right-color: @arrow-color;
  }
  &.left .tooltip-arrow {
    border-left-color: @arrow-color;
  }
  &.bottom .tooltip-arrow, &.bottom-left .tooltip-arrow, &.bottom-right .tooltip-arrow {
    border-bottom-color: @arrow-color;
  }
}
